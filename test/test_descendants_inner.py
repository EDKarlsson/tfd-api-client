# coding: utf-8

"""
    The First Descendant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tfd_api_client.models.descendants_inner import DescendantsInner

class TestDescendantsInner(unittest.TestCase):
    """DescendantsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DescendantsInner:
        """Test DescendantsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DescendantsInner`
        """
        model = DescendantsInner()
        if include_optional:
            return DescendantsInner(
                descendant_id = '',
                descendant_name = '',
                descendant_group_id = '',
                descendant_image_url = '',
                descendant_stat = [
                    tfd_api_client.models.descendants_inner_descendant_stat_inner.Descendants_inner_descendant_stat_inner(
                        level = 1.337, 
                        stat_detail = [
                            tfd_api_client.models.descendants_inner_descendant_stat_inner_stat_detail_inner.Descendants_inner_descendant_stat_inner_stat_detail_inner(
                                stat_id = '', 
                                stat_value = 1.337, )
                            ], )
                    ],
                descendant_skill = [
                    tfd_api_client.models.descendants_inner_descendant_skill_inner.Descendants_inner_descendant_skill_inner(
                        skill_type = '', 
                        skill_name = '', 
                        element_type = '', 
                        arche_type = '', 
                        skill_image_url = '', 
                        skill_description = '', )
                    ]
            )
        else:
            return DescendantsInner(
        )
        """

    def testDescendantsInner(self):
        """Test DescendantsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
