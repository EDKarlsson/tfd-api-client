# coding: utf-8

"""
    The First Descendant API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tfd_api_client.models.user_arche_tuning_arche_tuning_inner import UserArcheTuningArcheTuningInner

class TestUserArcheTuningArcheTuningInner(unittest.TestCase):
    """UserArcheTuningArcheTuningInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserArcheTuningArcheTuningInner:
        """Test UserArcheTuningArcheTuningInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserArcheTuningArcheTuningInner`
        """
        model = UserArcheTuningArcheTuningInner()
        if include_optional:
            return UserArcheTuningArcheTuningInner(
                slot_id = '',
                arche_tuning_board = [
                    tfd_api_client.models.user_arche_tuning_arche_tuning_inner_arche_tuning_board_inner.UserArcheTuning_arche_tuning_inner_arche_tuning_board_inner(
                        arche_tuning_board_id = '', 
                        node = [
                            tfd_api_client.models.user_arche_tuning_arche_tuning_inner_arche_tuning_board_inner_node_inner.UserArcheTuning_arche_tuning_inner_arche_tuning_board_inner_node_inner(
                                node_id = '', 
                                position_row = '', 
                                position_column = '', )
                            ], )
                    ]
            )
        else:
            return UserArcheTuningArcheTuningInner(
        )
        """

    def testUserArcheTuningArcheTuningInner(self):
        """Test UserArcheTuningArcheTuningInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
